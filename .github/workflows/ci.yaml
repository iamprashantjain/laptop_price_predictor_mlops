# name: CI pipeline

# on: push

# jobs:
#   project-testing:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install requirements
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Install DVC (if not in requirements.txt)
#         run: |
#           pip install dvc

#       - name: Run DVC pipeline
#         env:
#           DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT}}
#         run: |
#           dvc repro


name: CI pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install DVC (if not in requirements.txt)
        run: |
          pip install dvc

      - name: Run DVC pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro

      - name: Run model loading unit tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest tests/test_model.py


      - name: Run flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest tests/test_flask_app.py


      - name: login to dockerhub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}


      - name: build docker image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laptop_price_predictor:latest .


      - name: push to dockerhub
        if: success()
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/laptop_price_predictor:latest